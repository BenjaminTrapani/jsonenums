// generated by jsonenums -type=ShirtSize; DO NOT EDIT

package main

import (
	"encoding/json"
	"fmt"
)

var _ShirtSizeValueToName = map[ShirtSize]string{
	NA: "NA", XS: "XS", S: "S", M: "M", L: "L", XL: "XL",
}

func (r ShirtSize) MarshalJSON() ([]byte, error) {
	if s, ok := r.(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _ShirtSizeValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid ShirtSize: %d", r)
	}
	return json.Marshal(s)
}

var _ShirtSizeNameToValue = map[string]ShirtSize{
	"NA": NA, "XS": XS, "S": S, "M": M, "L": L, "XL": XL,
}

func (r *ShirtSize) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ShirtSize should be a string, got %s", data)
	}
	v, ok := _ShirtSizeNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid ShirtSize %q", s)
	}
	*r = v
	return nil
}
